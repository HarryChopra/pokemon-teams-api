// Code generated by sqlc. DO NOT EDIT.
// source: trainer.sql

package db

import (
	"context"
)

const createTrainer = `-- name: CreateTrainer :one
INSERT INTO trainers(name)
VALUES ($1)
RETURNING id, name, created_at
`

func (q *Queries) CreateTrainer(ctx context.Context, name string) (Trainer, error) {
	row := q.db.QueryRowContext(ctx, createTrainer, name)
	var i Trainer
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}

const getTrainer = `-- name: GetTrainer :one
SELECT id, name, created_at FROM trainers
WHERE id = $1
LIMIT 1
`

func (q *Queries) GetTrainer(ctx context.Context, id int32) (Trainer, error) {
	row := q.db.QueryRowContext(ctx, getTrainer, id)
	var i Trainer
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}
